Terminals unused in grammar

   RESERVED


Grammar

    0 $accept: Program $end

    1 Program: CLASS ID OBRACE auxProgram CBRACE

    2 auxProgram: %empty
    3           | auxProgram FieldDecl
    4           | auxProgram MethodDecl
    5           | auxProgram SEMI

    6 FieldDecl: PUBLIC STATIC Type ID auxFieldDecl SEMI
    7          | error SEMI

    8 auxFieldDecl: %empty
    9             | auxFieldDecl COMMA ID

   10 MethodDecl: PUBLIC STATIC MethodHeader MethodBody

   11 MethodHeader: Type ID OCURV CCURV
   12             | Type ID OCURV FormalParams CCURV
   13             | VOID ID OCURV CCURV
   14             | VOID ID OCURV FormalParams CCURV

   15 MethodBody: OBRACE auxMethodBody CBRACE

   16 auxMethodBody: %empty
   17              | auxMethodBody VarDecl
   18              | auxMethodBody Statement

   19 FormalParams: Type ID auxFormalParams
   20             | STRING OSQUARE CSQUARE ID

   21 auxFormalParams: %empty
   22                | auxFormalParams COMMA Type ID

   23 VarDecl: Type ID auxVarDecl SEMI

   24 auxVarDecl: %empty
   25           | auxVarDecl COMMA ID

   26 Type: BOOL
   27     | INT
   28     | DOUBLE

   29 Statement: OBRACE auxStatement CBRACE
   30          | IF OCURV Expr CCURV Statement
   31          | IF OCURV Expr CCURV Statement ELSE Statement
   32          | WHILE OCURV Expr CCURV Statement
   33          | DO Statement WHILE OCURV Expr CCURV SEMI
   34          | PRINT OCURV Expr CCURV SEMI
   35          | PRINT OCURV STRLIT CCURV SEMI
   36          | SEMI
   37          | Assignment SEMI
   38          | MethodInvocation SEMI
   39          | ParseArgs SEMI
   40          | RETURN Expr SEMI
   41          | RETURN SEMI
   42          | error SEMI

   43 auxStatement: %empty
   44             | auxStatement Statement

   45 Assignment: ID ASSIGN Expr

   46 MethodInvocation: ID OCURV CCURV
   47                 | ID OCURV Expr auxMethodInvocation CCURV
   48                 | ID OCURV error CCURV

   49 auxMethodInvocation: %empty
   50                    | auxMethodInvocation COMMA Expr

   51 ParseArgs: PARSEINT OCURV ID OSQUARE Expr CSQUARE CCURV
   52          | PARSEINT OCURV error CCURV

   53 Expr: Assignment
   54     | Expr2

   55 Expr2: MethodInvocation
   56      | ParseArgs
   57      | Expr2 AND Expr2
   58      | Expr2 OR Expr2
   59      | Expr2 EQ Expr2
   60      | Expr2 GEQ Expr2
   61      | Expr2 GT Expr2
   62      | Expr2 LEQ Expr2
   63      | Expr2 LT Expr2
   64      | Expr2 NEQ Expr2
   65      | Expr2 PLUS Expr2
   66      | Expr2 MINUS Expr2
   67      | Expr2 STAR Expr2
   68      | Expr2 DIV Expr2
   69      | Expr2 MOD Expr2
   70      | PLUS Expr2
   71      | MINUS Expr2
   72      | NOT Expr2
   73      | ID DOTLENGTH
   74      | ID
   75      | OCURV Expr CCURV
   76      | BOOLLIT
   77      | DECLIT
   78      | REALLIT
   79      | OCURV error CCURV


Terminals, with rules where they appear

$end (0) 0
error (256) 7 42 48 52 79
CLASS (258) 1
OBRACE (259) 1 15 29
SEMI (260) 5 6 7 23 33 34 35 36 37 38 39 40 41 42
CBRACE (261) 1 15 29
STATIC (262) 6 10
BOOL (263) 26
BOOLLIT (264) 76
DO (265) 33
DOTLENGTH (266) 73
DOUBLE (267) 28
ELSE (268) 31
IF (269) 30 31
INT (270) 27
PARSEINT (271) 51 52
PRINT (272) 34 35
PUBLIC (273) 6 10
RETURN (274) 40 41
STRING (275) 20
VOID (276) 13 14
WHILE (277) 32 33
OCURV (278) 11 12 13 14 30 31 32 33 34 35 46 47 48 51 52 75 79
CCURV (279) 11 12 13 14 30 31 32 33 34 35 46 47 48 51 52 75 79
AND (280) 57
OR (281) 58
LT (282) 63
GT (283) 61
ID (284) 1 6 9 11 12 13 14 19 20 22 23 25 45 46 47 48 51 73 74
EQ (285) 59
NEQ (286) 64
LEQ (287) 62
GEQ (288) 60
PLUS (289) 65 70
MINUS (290) 66 71
STAR (291) 67
DIV (292) 68
MOD (293) 69
NOT (294) 72
ASSIGN (295) 45
COMMA (296) 9 22 25 50
RESERVED (297)
OSQUARE (298) 20 51
CSQUARE (299) 20 51
DECLIT (300) 77
REALLIT (301) 78
STRLIT (302) 35
IFX (303)


Nonterminals, with rules where they appear

$accept (49)
    on left: 0
Program (50)
    on left: 1, on right: 0
auxProgram (51)
    on left: 2 3 4 5, on right: 1 3 4 5
FieldDecl (52)
    on left: 6 7, on right: 3
auxFieldDecl (53)
    on left: 8 9, on right: 6 9
MethodDecl (54)
    on left: 10, on right: 4
MethodHeader (55)
    on left: 11 12 13 14, on right: 10
MethodBody (56)
    on left: 15, on right: 10
auxMethodBody (57)
    on left: 16 17 18, on right: 15 17 18
FormalParams (58)
    on left: 19 20, on right: 12 14
auxFormalParams (59)
    on left: 21 22, on right: 19 22
VarDecl (60)
    on left: 23, on right: 17
auxVarDecl (61)
    on left: 24 25, on right: 23 25
Type (62)
    on left: 26 27 28, on right: 6 11 12 19 22 23
Statement (63)
    on left: 29 30 31 32 33 34 35 36 37 38 39 40 41 42, on right: 18
    30 31 32 33 44
auxStatement (64)
    on left: 43 44, on right: 29 44
Assignment (65)
    on left: 45, on right: 37 53
MethodInvocation (66)
    on left: 46 47 48, on right: 38 55
auxMethodInvocation (67)
    on left: 49 50, on right: 47 50
ParseArgs (68)
    on left: 51 52, on right: 39 56
Expr (69)
    on left: 53 54, on right: 30 31 32 33 34 40 45 47 50 51 75
Expr2 (70)
    on left: 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72
    73 74 75 76 77 78 79, on right: 54 57 58 59 60 61 62 63 64 65 66
    67 68 69 70 71 72


State 0

    0 $accept: . Program $end

    CLASS  shift, and go to state 1

    Program  go to state 2


State 1

    1 Program: CLASS . ID OBRACE auxProgram CBRACE

    ID  shift, and go to state 3


State 2

    0 $accept: Program . $end

    $end  shift, and go to state 4


State 3

    1 Program: CLASS ID . OBRACE auxProgram CBRACE

    OBRACE  shift, and go to state 5


State 4

    0 $accept: Program $end .

    $default  accept


State 5

    1 Program: CLASS ID OBRACE . auxProgram CBRACE

    $default  reduce using rule 2 (auxProgram)

    auxProgram  go to state 6


State 6

    1 Program: CLASS ID OBRACE auxProgram . CBRACE
    3 auxProgram: auxProgram . FieldDecl
    4           | auxProgram . MethodDecl
    5           | auxProgram . SEMI

    error   shift, and go to state 7
    SEMI    shift, and go to state 8
    CBRACE  shift, and go to state 9
    PUBLIC  shift, and go to state 10

    FieldDecl   go to state 11
    MethodDecl  go to state 12


State 7

    7 FieldDecl: error . SEMI

    SEMI  shift, and go to state 13


State 8

    5 auxProgram: auxProgram SEMI .

    $default  reduce using rule 5 (auxProgram)


State 9

    1 Program: CLASS ID OBRACE auxProgram CBRACE .

    $default  reduce using rule 1 (Program)


State 10

    6 FieldDecl: PUBLIC . STATIC Type ID auxFieldDecl SEMI
   10 MethodDecl: PUBLIC . STATIC MethodHeader MethodBody

    STATIC  shift, and go to state 14


State 11

    3 auxProgram: auxProgram FieldDecl .

    $default  reduce using rule 3 (auxProgram)


State 12

    4 auxProgram: auxProgram MethodDecl .

    $default  reduce using rule 4 (auxProgram)


State 13

    7 FieldDecl: error SEMI .

    $default  reduce using rule 7 (FieldDecl)


State 14

    6 FieldDecl: PUBLIC STATIC . Type ID auxFieldDecl SEMI
   10 MethodDecl: PUBLIC STATIC . MethodHeader MethodBody

    BOOL    shift, and go to state 15
    DOUBLE  shift, and go to state 16
    INT     shift, and go to state 17
    VOID    shift, and go to state 18

    MethodHeader  go to state 19
    Type          go to state 20


State 15

   26 Type: BOOL .

    $default  reduce using rule 26 (Type)


State 16

   28 Type: DOUBLE .

    $default  reduce using rule 28 (Type)


State 17

   27 Type: INT .

    $default  reduce using rule 27 (Type)


State 18

   13 MethodHeader: VOID . ID OCURV CCURV
   14             | VOID . ID OCURV FormalParams CCURV

    ID  shift, and go to state 21


State 19

   10 MethodDecl: PUBLIC STATIC MethodHeader . MethodBody

    OBRACE  shift, and go to state 22

    MethodBody  go to state 23


State 20

    6 FieldDecl: PUBLIC STATIC Type . ID auxFieldDecl SEMI
   11 MethodHeader: Type . ID OCURV CCURV
   12             | Type . ID OCURV FormalParams CCURV

    ID  shift, and go to state 24


State 21

   13 MethodHeader: VOID ID . OCURV CCURV
   14             | VOID ID . OCURV FormalParams CCURV

    OCURV  shift, and go to state 25


State 22

   15 MethodBody: OBRACE . auxMethodBody CBRACE

    $default  reduce using rule 16 (auxMethodBody)

    auxMethodBody  go to state 26


State 23

   10 MethodDecl: PUBLIC STATIC MethodHeader MethodBody .

    $default  reduce using rule 10 (MethodDecl)


State 24

    6 FieldDecl: PUBLIC STATIC Type ID . auxFieldDecl SEMI
   11 MethodHeader: Type ID . OCURV CCURV
   12             | Type ID . OCURV FormalParams CCURV

    OCURV  shift, and go to state 27

    $default  reduce using rule 8 (auxFieldDecl)

    auxFieldDecl  go to state 28


State 25

   13 MethodHeader: VOID ID OCURV . CCURV
   14             | VOID ID OCURV . FormalParams CCURV

    BOOL    shift, and go to state 15
    DOUBLE  shift, and go to state 16
    INT     shift, and go to state 17
    STRING  shift, and go to state 29
    CCURV   shift, and go to state 30

    FormalParams  go to state 31
    Type          go to state 32


State 26

   15 MethodBody: OBRACE auxMethodBody . CBRACE
   17 auxMethodBody: auxMethodBody . VarDecl
   18              | auxMethodBody . Statement

    error     shift, and go to state 33
    OBRACE    shift, and go to state 34
    SEMI      shift, and go to state 35
    CBRACE    shift, and go to state 36
    BOOL      shift, and go to state 15
    DO        shift, and go to state 37
    DOUBLE    shift, and go to state 16
    IF        shift, and go to state 38
    INT       shift, and go to state 17
    PARSEINT  shift, and go to state 39
    PRINT     shift, and go to state 40
    RETURN    shift, and go to state 41
    WHILE     shift, and go to state 42
    ID        shift, and go to state 43

    VarDecl           go to state 44
    Type              go to state 45
    Statement         go to state 46
    Assignment        go to state 47
    MethodInvocation  go to state 48
    ParseArgs         go to state 49


State 27

   11 MethodHeader: Type ID OCURV . CCURV
   12             | Type ID OCURV . FormalParams CCURV

    BOOL    shift, and go to state 15
    DOUBLE  shift, and go to state 16
    INT     shift, and go to state 17
    STRING  shift, and go to state 29
    CCURV   shift, and go to state 50

    FormalParams  go to state 51
    Type          go to state 32


State 28

    6 FieldDecl: PUBLIC STATIC Type ID auxFieldDecl . SEMI
    9 auxFieldDecl: auxFieldDecl . COMMA ID

    SEMI   shift, and go to state 52
    COMMA  shift, and go to state 53


State 29

   20 FormalParams: STRING . OSQUARE CSQUARE ID

    OSQUARE  shift, and go to state 54


State 30

   13 MethodHeader: VOID ID OCURV CCURV .

    $default  reduce using rule 13 (MethodHeader)


State 31

   14 MethodHeader: VOID ID OCURV FormalParams . CCURV

    CCURV  shift, and go to state 55


State 32

   19 FormalParams: Type . ID auxFormalParams

    ID  shift, and go to state 56


State 33

   42 Statement: error . SEMI

    SEMI  shift, and go to state 57


State 34

   29 Statement: OBRACE . auxStatement CBRACE

    $default  reduce using rule 43 (auxStatement)

    auxStatement  go to state 58


State 35

   36 Statement: SEMI .

    $default  reduce using rule 36 (Statement)


State 36

   15 MethodBody: OBRACE auxMethodBody CBRACE .

    $default  reduce using rule 15 (MethodBody)


State 37

   33 Statement: DO . Statement WHILE OCURV Expr CCURV SEMI

    error     shift, and go to state 33
    OBRACE    shift, and go to state 34
    SEMI      shift, and go to state 35
    DO        shift, and go to state 37
    IF        shift, and go to state 38
    PARSEINT  shift, and go to state 39
    PRINT     shift, and go to state 40
    RETURN    shift, and go to state 41
    WHILE     shift, and go to state 42
    ID        shift, and go to state 43

    Statement         go to state 59
    Assignment        go to state 47
    MethodInvocation  go to state 48
    ParseArgs         go to state 49


State 38

   30 Statement: IF . OCURV Expr CCURV Statement
   31          | IF . OCURV Expr CCURV Statement ELSE Statement

    OCURV  shift, and go to state 60


State 39

   51 ParseArgs: PARSEINT . OCURV ID OSQUARE Expr CSQUARE CCURV
   52          | PARSEINT . OCURV error CCURV

    OCURV  shift, and go to state 61


State 40

   34 Statement: PRINT . OCURV Expr CCURV SEMI
   35          | PRINT . OCURV STRLIT CCURV SEMI

    OCURV  shift, and go to state 62


State 41

   40 Statement: RETURN . Expr SEMI
   41          | RETURN . SEMI

    SEMI      shift, and go to state 63
    BOOLLIT   shift, and go to state 64
    PARSEINT  shift, and go to state 39
    OCURV     shift, and go to state 65
    ID        shift, and go to state 66
    PLUS      shift, and go to state 67
    MINUS     shift, and go to state 68
    NOT       shift, and go to state 69
    DECLIT    shift, and go to state 70
    REALLIT   shift, and go to state 71

    Assignment        go to state 72
    MethodInvocation  go to state 73
    ParseArgs         go to state 74
    Expr              go to state 75
    Expr2             go to state 76


State 42

   32 Statement: WHILE . OCURV Expr CCURV Statement

    OCURV  shift, and go to state 77


State 43

   45 Assignment: ID . ASSIGN Expr
   46 MethodInvocation: ID . OCURV CCURV
   47                 | ID . OCURV Expr auxMethodInvocation CCURV
   48                 | ID . OCURV error CCURV

    OCURV   shift, and go to state 78
    ASSIGN  shift, and go to state 79


State 44

   17 auxMethodBody: auxMethodBody VarDecl .

    $default  reduce using rule 17 (auxMethodBody)


State 45

   23 VarDecl: Type . ID auxVarDecl SEMI

    ID  shift, and go to state 80


State 46

   18 auxMethodBody: auxMethodBody Statement .

    $default  reduce using rule 18 (auxMethodBody)


State 47

   37 Statement: Assignment . SEMI

    SEMI  shift, and go to state 81


State 48

   38 Statement: MethodInvocation . SEMI

    SEMI  shift, and go to state 82


State 49

   39 Statement: ParseArgs . SEMI

    SEMI  shift, and go to state 83


State 50

   11 MethodHeader: Type ID OCURV CCURV .

    $default  reduce using rule 11 (MethodHeader)


State 51

   12 MethodHeader: Type ID OCURV FormalParams . CCURV

    CCURV  shift, and go to state 84


State 52

    6 FieldDecl: PUBLIC STATIC Type ID auxFieldDecl SEMI .

    $default  reduce using rule 6 (FieldDecl)


State 53

    9 auxFieldDecl: auxFieldDecl COMMA . ID

    ID  shift, and go to state 85


State 54

   20 FormalParams: STRING OSQUARE . CSQUARE ID

    CSQUARE  shift, and go to state 86


State 55

   14 MethodHeader: VOID ID OCURV FormalParams CCURV .

    $default  reduce using rule 14 (MethodHeader)


State 56

   19 FormalParams: Type ID . auxFormalParams

    $default  reduce using rule 21 (auxFormalParams)

    auxFormalParams  go to state 87


State 57

   42 Statement: error SEMI .

    $default  reduce using rule 42 (Statement)


State 58

   29 Statement: OBRACE auxStatement . CBRACE
   44 auxStatement: auxStatement . Statement

    error     shift, and go to state 33
    OBRACE    shift, and go to state 34
    SEMI      shift, and go to state 35
    CBRACE    shift, and go to state 88
    DO        shift, and go to state 37
    IF        shift, and go to state 38
    PARSEINT  shift, and go to state 39
    PRINT     shift, and go to state 40
    RETURN    shift, and go to state 41
    WHILE     shift, and go to state 42
    ID        shift, and go to state 43

    Statement         go to state 89
    Assignment        go to state 47
    MethodInvocation  go to state 48
    ParseArgs         go to state 49


State 59

   33 Statement: DO Statement . WHILE OCURV Expr CCURV SEMI

    WHILE  shift, and go to state 90


State 60

   30 Statement: IF OCURV . Expr CCURV Statement
   31          | IF OCURV . Expr CCURV Statement ELSE Statement

    BOOLLIT   shift, and go to state 64
    PARSEINT  shift, and go to state 39
    OCURV     shift, and go to state 65
    ID        shift, and go to state 66
    PLUS      shift, and go to state 67
    MINUS     shift, and go to state 68
    NOT       shift, and go to state 69
    DECLIT    shift, and go to state 70
    REALLIT   shift, and go to state 71

    Assignment        go to state 72
    MethodInvocation  go to state 73
    ParseArgs         go to state 74
    Expr              go to state 91
    Expr2             go to state 76


State 61

   51 ParseArgs: PARSEINT OCURV . ID OSQUARE Expr CSQUARE CCURV
   52          | PARSEINT OCURV . error CCURV

    error  shift, and go to state 92
    ID     shift, and go to state 93


State 62

   34 Statement: PRINT OCURV . Expr CCURV SEMI
   35          | PRINT OCURV . STRLIT CCURV SEMI

    BOOLLIT   shift, and go to state 64
    PARSEINT  shift, and go to state 39
    OCURV     shift, and go to state 65
    ID        shift, and go to state 66
    PLUS      shift, and go to state 67
    MINUS     shift, and go to state 68
    NOT       shift, and go to state 69
    DECLIT    shift, and go to state 70
    REALLIT   shift, and go to state 71
    STRLIT    shift, and go to state 94

    Assignment        go to state 72
    MethodInvocation  go to state 73
    ParseArgs         go to state 74
    Expr              go to state 95
    Expr2             go to state 76


State 63

   41 Statement: RETURN SEMI .

    $default  reduce using rule 41 (Statement)


State 64

   76 Expr2: BOOLLIT .

    $default  reduce using rule 76 (Expr2)


State 65

   75 Expr2: OCURV . Expr CCURV
   79      | OCURV . error CCURV

    error     shift, and go to state 96
    BOOLLIT   shift, and go to state 64
    PARSEINT  shift, and go to state 39
    OCURV     shift, and go to state 65
    ID        shift, and go to state 66
    PLUS      shift, and go to state 67
    MINUS     shift, and go to state 68
    NOT       shift, and go to state 69
    DECLIT    shift, and go to state 70
    REALLIT   shift, and go to state 71

    Assignment        go to state 72
    MethodInvocation  go to state 73
    ParseArgs         go to state 74
    Expr              go to state 97
    Expr2             go to state 76


State 66

   45 Assignment: ID . ASSIGN Expr
   46 MethodInvocation: ID . OCURV CCURV
   47                 | ID . OCURV Expr auxMethodInvocation CCURV
   48                 | ID . OCURV error CCURV
   73 Expr2: ID . DOTLENGTH
   74      | ID .

    DOTLENGTH  shift, and go to state 98
    OCURV      shift, and go to state 78
    ASSIGN     shift, and go to state 79

    $default  reduce using rule 74 (Expr2)


State 67

   70 Expr2: PLUS . Expr2

    BOOLLIT   shift, and go to state 64
    PARSEINT  shift, and go to state 39
    OCURV     shift, and go to state 65
    ID        shift, and go to state 99
    PLUS      shift, and go to state 67
    MINUS     shift, and go to state 68
    NOT       shift, and go to state 69
    DECLIT    shift, and go to state 70
    REALLIT   shift, and go to state 71

    MethodInvocation  go to state 73
    ParseArgs         go to state 74
    Expr2             go to state 100


State 68

   71 Expr2: MINUS . Expr2

    BOOLLIT   shift, and go to state 64
    PARSEINT  shift, and go to state 39
    OCURV     shift, and go to state 65
    ID        shift, and go to state 99
    PLUS      shift, and go to state 67
    MINUS     shift, and go to state 68
    NOT       shift, and go to state 69
    DECLIT    shift, and go to state 70
    REALLIT   shift, and go to state 71

    MethodInvocation  go to state 73
    ParseArgs         go to state 74
    Expr2             go to state 101


State 69

   72 Expr2: NOT . Expr2

    BOOLLIT   shift, and go to state 64
    PARSEINT  shift, and go to state 39
    OCURV     shift, and go to state 65
    ID        shift, and go to state 99
    PLUS      shift, and go to state 67
    MINUS     shift, and go to state 68
    NOT       shift, and go to state 69
    DECLIT    shift, and go to state 70
    REALLIT   shift, and go to state 71

    MethodInvocation  go to state 73
    ParseArgs         go to state 74
    Expr2             go to state 102


State 70

   77 Expr2: DECLIT .

    $default  reduce using rule 77 (Expr2)


State 71

   78 Expr2: REALLIT .

    $default  reduce using rule 78 (Expr2)


State 72

   53 Expr: Assignment .

    $default  reduce using rule 53 (Expr)


State 73

   55 Expr2: MethodInvocation .

    $default  reduce using rule 55 (Expr2)


State 74

   56 Expr2: ParseArgs .

    $default  reduce using rule 56 (Expr2)


State 75

   40 Statement: RETURN Expr . SEMI

    SEMI  shift, and go to state 103


State 76

   54 Expr: Expr2 .
   57 Expr2: Expr2 . AND Expr2
   58      | Expr2 . OR Expr2
   59      | Expr2 . EQ Expr2
   60      | Expr2 . GEQ Expr2
   61      | Expr2 . GT Expr2
   62      | Expr2 . LEQ Expr2
   63      | Expr2 . LT Expr2
   64      | Expr2 . NEQ Expr2
   65      | Expr2 . PLUS Expr2
   66      | Expr2 . MINUS Expr2
   67      | Expr2 . STAR Expr2
   68      | Expr2 . DIV Expr2
   69      | Expr2 . MOD Expr2

    AND    shift, and go to state 104
    OR     shift, and go to state 105
    LT     shift, and go to state 106
    GT     shift, and go to state 107
    EQ     shift, and go to state 108
    NEQ    shift, and go to state 109
    LEQ    shift, and go to state 110
    GEQ    shift, and go to state 111
    PLUS   shift, and go to state 112
    MINUS  shift, and go to state 113
    STAR   shift, and go to state 114
    DIV    shift, and go to state 115
    MOD    shift, and go to state 116

    $default  reduce using rule 54 (Expr)


State 77

   32 Statement: WHILE OCURV . Expr CCURV Statement

    BOOLLIT   shift, and go to state 64
    PARSEINT  shift, and go to state 39
    OCURV     shift, and go to state 65
    ID        shift, and go to state 66
    PLUS      shift, and go to state 67
    MINUS     shift, and go to state 68
    NOT       shift, and go to state 69
    DECLIT    shift, and go to state 70
    REALLIT   shift, and go to state 71

    Assignment        go to state 72
    MethodInvocation  go to state 73
    ParseArgs         go to state 74
    Expr              go to state 117
    Expr2             go to state 76


State 78

   46 MethodInvocation: ID OCURV . CCURV
   47                 | ID OCURV . Expr auxMethodInvocation CCURV
   48                 | ID OCURV . error CCURV

    error     shift, and go to state 118
    BOOLLIT   shift, and go to state 64
    PARSEINT  shift, and go to state 39
    OCURV     shift, and go to state 65
    CCURV     shift, and go to state 119
    ID        shift, and go to state 66
    PLUS      shift, and go to state 67
    MINUS     shift, and go to state 68
    NOT       shift, and go to state 69
    DECLIT    shift, and go to state 70
    REALLIT   shift, and go to state 71

    Assignment        go to state 72
    MethodInvocation  go to state 73
    ParseArgs         go to state 74
    Expr              go to state 120
    Expr2             go to state 76


State 79

   45 Assignment: ID ASSIGN . Expr

    BOOLLIT   shift, and go to state 64
    PARSEINT  shift, and go to state 39
    OCURV     shift, and go to state 65
    ID        shift, and go to state 66
    PLUS      shift, and go to state 67
    MINUS     shift, and go to state 68
    NOT       shift, and go to state 69
    DECLIT    shift, and go to state 70
    REALLIT   shift, and go to state 71

    Assignment        go to state 72
    MethodInvocation  go to state 73
    ParseArgs         go to state 74
    Expr              go to state 121
    Expr2             go to state 76


State 80

   23 VarDecl: Type ID . auxVarDecl SEMI

    $default  reduce using rule 24 (auxVarDecl)

    auxVarDecl  go to state 122


State 81

   37 Statement: Assignment SEMI .

    $default  reduce using rule 37 (Statement)


State 82

   38 Statement: MethodInvocation SEMI .

    $default  reduce using rule 38 (Statement)


State 83

   39 Statement: ParseArgs SEMI .

    $default  reduce using rule 39 (Statement)


State 84

   12 MethodHeader: Type ID OCURV FormalParams CCURV .

    $default  reduce using rule 12 (MethodHeader)


State 85

    9 auxFieldDecl: auxFieldDecl COMMA ID .

    $default  reduce using rule 9 (auxFieldDecl)


State 86

   20 FormalParams: STRING OSQUARE CSQUARE . ID

    ID  shift, and go to state 123


State 87

   19 FormalParams: Type ID auxFormalParams .
   22 auxFormalParams: auxFormalParams . COMMA Type ID

    COMMA  shift, and go to state 124

    $default  reduce using rule 19 (FormalParams)


State 88

   29 Statement: OBRACE auxStatement CBRACE .

    $default  reduce using rule 29 (Statement)


State 89

   44 auxStatement: auxStatement Statement .

    $default  reduce using rule 44 (auxStatement)


State 90

   33 Statement: DO Statement WHILE . OCURV Expr CCURV SEMI

    OCURV  shift, and go to state 125


State 91

   30 Statement: IF OCURV Expr . CCURV Statement
   31          | IF OCURV Expr . CCURV Statement ELSE Statement

    CCURV  shift, and go to state 126


State 92

   52 ParseArgs: PARSEINT OCURV error . CCURV

    CCURV  shift, and go to state 127


State 93

   51 ParseArgs: PARSEINT OCURV ID . OSQUARE Expr CSQUARE CCURV

    OSQUARE  shift, and go to state 128


State 94

   35 Statement: PRINT OCURV STRLIT . CCURV SEMI

    CCURV  shift, and go to state 129


State 95

   34 Statement: PRINT OCURV Expr . CCURV SEMI

    CCURV  shift, and go to state 130


State 96

   79 Expr2: OCURV error . CCURV

    CCURV  shift, and go to state 131


State 97

   75 Expr2: OCURV Expr . CCURV

    CCURV  shift, and go to state 132


State 98

   73 Expr2: ID DOTLENGTH .

    $default  reduce using rule 73 (Expr2)


State 99

   46 MethodInvocation: ID . OCURV CCURV
   47                 | ID . OCURV Expr auxMethodInvocation CCURV
   48                 | ID . OCURV error CCURV
   73 Expr2: ID . DOTLENGTH
   74      | ID .

    DOTLENGTH  shift, and go to state 98
    OCURV      shift, and go to state 78

    $default  reduce using rule 74 (Expr2)


State 100

   57 Expr2: Expr2 . AND Expr2
   58      | Expr2 . OR Expr2
   59      | Expr2 . EQ Expr2
   60      | Expr2 . GEQ Expr2
   61      | Expr2 . GT Expr2
   62      | Expr2 . LEQ Expr2
   63      | Expr2 . LT Expr2
   64      | Expr2 . NEQ Expr2
   65      | Expr2 . PLUS Expr2
   66      | Expr2 . MINUS Expr2
   67      | Expr2 . STAR Expr2
   68      | Expr2 . DIV Expr2
   69      | Expr2 . MOD Expr2
   70      | PLUS Expr2 .

    $default  reduce using rule 70 (Expr2)


State 101

   57 Expr2: Expr2 . AND Expr2
   58      | Expr2 . OR Expr2
   59      | Expr2 . EQ Expr2
   60      | Expr2 . GEQ Expr2
   61      | Expr2 . GT Expr2
   62      | Expr2 . LEQ Expr2
   63      | Expr2 . LT Expr2
   64      | Expr2 . NEQ Expr2
   65      | Expr2 . PLUS Expr2
   66      | Expr2 . MINUS Expr2
   67      | Expr2 . STAR Expr2
   68      | Expr2 . DIV Expr2
   69      | Expr2 . MOD Expr2
   71      | MINUS Expr2 .

    $default  reduce using rule 71 (Expr2)


State 102

   57 Expr2: Expr2 . AND Expr2
   58      | Expr2 . OR Expr2
   59      | Expr2 . EQ Expr2
   60      | Expr2 . GEQ Expr2
   61      | Expr2 . GT Expr2
   62      | Expr2 . LEQ Expr2
   63      | Expr2 . LT Expr2
   64      | Expr2 . NEQ Expr2
   65      | Expr2 . PLUS Expr2
   66      | Expr2 . MINUS Expr2
   67      | Expr2 . STAR Expr2
   68      | Expr2 . DIV Expr2
   69      | Expr2 . MOD Expr2
   72      | NOT Expr2 .

    $default  reduce using rule 72 (Expr2)


State 103

   40 Statement: RETURN Expr SEMI .

    $default  reduce using rule 40 (Statement)


State 104

   57 Expr2: Expr2 AND . Expr2

    BOOLLIT   shift, and go to state 64
    PARSEINT  shift, and go to state 39
    OCURV     shift, and go to state 65
    ID        shift, and go to state 99
    PLUS      shift, and go to state 67
    MINUS     shift, and go to state 68
    NOT       shift, and go to state 69
    DECLIT    shift, and go to state 70
    REALLIT   shift, and go to state 71

    MethodInvocation  go to state 73
    ParseArgs         go to state 74
    Expr2             go to state 133


State 105

   58 Expr2: Expr2 OR . Expr2

    BOOLLIT   shift, and go to state 64
    PARSEINT  shift, and go to state 39
    OCURV     shift, and go to state 65
    ID        shift, and go to state 99
    PLUS      shift, and go to state 67
    MINUS     shift, and go to state 68
    NOT       shift, and go to state 69
    DECLIT    shift, and go to state 70
    REALLIT   shift, and go to state 71

    MethodInvocation  go to state 73
    ParseArgs         go to state 74
    Expr2             go to state 134


State 106

   63 Expr2: Expr2 LT . Expr2

    BOOLLIT   shift, and go to state 64
    PARSEINT  shift, and go to state 39
    OCURV     shift, and go to state 65
    ID        shift, and go to state 99
    PLUS      shift, and go to state 67
    MINUS     shift, and go to state 68
    NOT       shift, and go to state 69
    DECLIT    shift, and go to state 70
    REALLIT   shift, and go to state 71

    MethodInvocation  go to state 73
    ParseArgs         go to state 74
    Expr2             go to state 135


State 107

   61 Expr2: Expr2 GT . Expr2

    BOOLLIT   shift, and go to state 64
    PARSEINT  shift, and go to state 39
    OCURV     shift, and go to state 65
    ID        shift, and go to state 99
    PLUS      shift, and go to state 67
    MINUS     shift, and go to state 68
    NOT       shift, and go to state 69
    DECLIT    shift, and go to state 70
    REALLIT   shift, and go to state 71

    MethodInvocation  go to state 73
    ParseArgs         go to state 74
    Expr2             go to state 136


State 108

   59 Expr2: Expr2 EQ . Expr2

    BOOLLIT   shift, and go to state 64
    PARSEINT  shift, and go to state 39
    OCURV     shift, and go to state 65
    ID        shift, and go to state 99
    PLUS      shift, and go to state 67
    MINUS     shift, and go to state 68
    NOT       shift, and go to state 69
    DECLIT    shift, and go to state 70
    REALLIT   shift, and go to state 71

    MethodInvocation  go to state 73
    ParseArgs         go to state 74
    Expr2             go to state 137


State 109

   64 Expr2: Expr2 NEQ . Expr2

    BOOLLIT   shift, and go to state 64
    PARSEINT  shift, and go to state 39
    OCURV     shift, and go to state 65
    ID        shift, and go to state 99
    PLUS      shift, and go to state 67
    MINUS     shift, and go to state 68
    NOT       shift, and go to state 69
    DECLIT    shift, and go to state 70
    REALLIT   shift, and go to state 71

    MethodInvocation  go to state 73
    ParseArgs         go to state 74
    Expr2             go to state 138


State 110

   62 Expr2: Expr2 LEQ . Expr2

    BOOLLIT   shift, and go to state 64
    PARSEINT  shift, and go to state 39
    OCURV     shift, and go to state 65
    ID        shift, and go to state 99
    PLUS      shift, and go to state 67
    MINUS     shift, and go to state 68
    NOT       shift, and go to state 69
    DECLIT    shift, and go to state 70
    REALLIT   shift, and go to state 71

    MethodInvocation  go to state 73
    ParseArgs         go to state 74
    Expr2             go to state 139


State 111

   60 Expr2: Expr2 GEQ . Expr2

    BOOLLIT   shift, and go to state 64
    PARSEINT  shift, and go to state 39
    OCURV     shift, and go to state 65
    ID        shift, and go to state 99
    PLUS      shift, and go to state 67
    MINUS     shift, and go to state 68
    NOT       shift, and go to state 69
    DECLIT    shift, and go to state 70
    REALLIT   shift, and go to state 71

    MethodInvocation  go to state 73
    ParseArgs         go to state 74
    Expr2             go to state 140


State 112

   65 Expr2: Expr2 PLUS . Expr2

    BOOLLIT   shift, and go to state 64
    PARSEINT  shift, and go to state 39
    OCURV     shift, and go to state 65
    ID        shift, and go to state 99
    PLUS      shift, and go to state 67
    MINUS     shift, and go to state 68
    NOT       shift, and go to state 69
    DECLIT    shift, and go to state 70
    REALLIT   shift, and go to state 71

    MethodInvocation  go to state 73
    ParseArgs         go to state 74
    Expr2             go to state 141


State 113

   66 Expr2: Expr2 MINUS . Expr2

    BOOLLIT   shift, and go to state 64
    PARSEINT  shift, and go to state 39
    OCURV     shift, and go to state 65
    ID        shift, and go to state 99
    PLUS      shift, and go to state 67
    MINUS     shift, and go to state 68
    NOT       shift, and go to state 69
    DECLIT    shift, and go to state 70
    REALLIT   shift, and go to state 71

    MethodInvocation  go to state 73
    ParseArgs         go to state 74
    Expr2             go to state 142


State 114

   67 Expr2: Expr2 STAR . Expr2

    BOOLLIT   shift, and go to state 64
    PARSEINT  shift, and go to state 39
    OCURV     shift, and go to state 65
    ID        shift, and go to state 99
    PLUS      shift, and go to state 67
    MINUS     shift, and go to state 68
    NOT       shift, and go to state 69
    DECLIT    shift, and go to state 70
    REALLIT   shift, and go to state 71

    MethodInvocation  go to state 73
    ParseArgs         go to state 74
    Expr2             go to state 143


State 115

   68 Expr2: Expr2 DIV . Expr2

    BOOLLIT   shift, and go to state 64
    PARSEINT  shift, and go to state 39
    OCURV     shift, and go to state 65
    ID        shift, and go to state 99
    PLUS      shift, and go to state 67
    MINUS     shift, and go to state 68
    NOT       shift, and go to state 69
    DECLIT    shift, and go to state 70
    REALLIT   shift, and go to state 71

    MethodInvocation  go to state 73
    ParseArgs         go to state 74
    Expr2             go to state 144


State 116

   69 Expr2: Expr2 MOD . Expr2

    BOOLLIT   shift, and go to state 64
    PARSEINT  shift, and go to state 39
    OCURV     shift, and go to state 65
    ID        shift, and go to state 99
    PLUS      shift, and go to state 67
    MINUS     shift, and go to state 68
    NOT       shift, and go to state 69
    DECLIT    shift, and go to state 70
    REALLIT   shift, and go to state 71

    MethodInvocation  go to state 73
    ParseArgs         go to state 74
    Expr2             go to state 145


State 117

   32 Statement: WHILE OCURV Expr . CCURV Statement

    CCURV  shift, and go to state 146


State 118

   48 MethodInvocation: ID OCURV error . CCURV

    CCURV  shift, and go to state 147


State 119

   46 MethodInvocation: ID OCURV CCURV .

    $default  reduce using rule 46 (MethodInvocation)


State 120

   47 MethodInvocation: ID OCURV Expr . auxMethodInvocation CCURV

    $default  reduce using rule 49 (auxMethodInvocation)

    auxMethodInvocation  go to state 148


State 121

   45 Assignment: ID ASSIGN Expr .

    $default  reduce using rule 45 (Assignment)


State 122

   23 VarDecl: Type ID auxVarDecl . SEMI
   25 auxVarDecl: auxVarDecl . COMMA ID

    SEMI   shift, and go to state 149
    COMMA  shift, and go to state 150


State 123

   20 FormalParams: STRING OSQUARE CSQUARE ID .

    $default  reduce using rule 20 (FormalParams)


State 124

   22 auxFormalParams: auxFormalParams COMMA . Type ID

    BOOL    shift, and go to state 15
    DOUBLE  shift, and go to state 16
    INT     shift, and go to state 17

    Type  go to state 151


State 125

   33 Statement: DO Statement WHILE OCURV . Expr CCURV SEMI

    BOOLLIT   shift, and go to state 64
    PARSEINT  shift, and go to state 39
    OCURV     shift, and go to state 65
    ID        shift, and go to state 66
    PLUS      shift, and go to state 67
    MINUS     shift, and go to state 68
    NOT       shift, and go to state 69
    DECLIT    shift, and go to state 70
    REALLIT   shift, and go to state 71

    Assignment        go to state 72
    MethodInvocation  go to state 73
    ParseArgs         go to state 74
    Expr              go to state 152
    Expr2             go to state 76


State 126

   30 Statement: IF OCURV Expr CCURV . Statement
   31          | IF OCURV Expr CCURV . Statement ELSE Statement

    error     shift, and go to state 33
    OBRACE    shift, and go to state 34
    SEMI      shift, and go to state 35
    DO        shift, and go to state 37
    IF        shift, and go to state 38
    PARSEINT  shift, and go to state 39
    PRINT     shift, and go to state 40
    RETURN    shift, and go to state 41
    WHILE     shift, and go to state 42
    ID        shift, and go to state 43

    Statement         go to state 153
    Assignment        go to state 47
    MethodInvocation  go to state 48
    ParseArgs         go to state 49


State 127

   52 ParseArgs: PARSEINT OCURV error CCURV .

    $default  reduce using rule 52 (ParseArgs)


State 128

   51 ParseArgs: PARSEINT OCURV ID OSQUARE . Expr CSQUARE CCURV

    BOOLLIT   shift, and go to state 64
    PARSEINT  shift, and go to state 39
    OCURV     shift, and go to state 65
    ID        shift, and go to state 66
    PLUS      shift, and go to state 67
    MINUS     shift, and go to state 68
    NOT       shift, and go to state 69
    DECLIT    shift, and go to state 70
    REALLIT   shift, and go to state 71

    Assignment        go to state 72
    MethodInvocation  go to state 73
    ParseArgs         go to state 74
    Expr              go to state 154
    Expr2             go to state 76


State 129

   35 Statement: PRINT OCURV STRLIT CCURV . SEMI

    SEMI  shift, and go to state 155


State 130

   34 Statement: PRINT OCURV Expr CCURV . SEMI

    SEMI  shift, and go to state 156


State 131

   79 Expr2: OCURV error CCURV .

    $default  reduce using rule 79 (Expr2)


State 132

   75 Expr2: OCURV Expr CCURV .

    $default  reduce using rule 75 (Expr2)


State 133

   57 Expr2: Expr2 . AND Expr2
   57      | Expr2 AND Expr2 .
   58      | Expr2 . OR Expr2
   59      | Expr2 . EQ Expr2
   60      | Expr2 . GEQ Expr2
   61      | Expr2 . GT Expr2
   62      | Expr2 . LEQ Expr2
   63      | Expr2 . LT Expr2
   64      | Expr2 . NEQ Expr2
   65      | Expr2 . PLUS Expr2
   66      | Expr2 . MINUS Expr2
   67      | Expr2 . STAR Expr2
   68      | Expr2 . DIV Expr2
   69      | Expr2 . MOD Expr2

    LT     shift, and go to state 106
    GT     shift, and go to state 107
    EQ     shift, and go to state 108
    NEQ    shift, and go to state 109
    LEQ    shift, and go to state 110
    GEQ    shift, and go to state 111
    PLUS   shift, and go to state 112
    MINUS  shift, and go to state 113
    STAR   shift, and go to state 114
    DIV    shift, and go to state 115
    MOD    shift, and go to state 116

    $default  reduce using rule 57 (Expr2)


State 134

   57 Expr2: Expr2 . AND Expr2
   58      | Expr2 . OR Expr2
   58      | Expr2 OR Expr2 .
   59      | Expr2 . EQ Expr2
   60      | Expr2 . GEQ Expr2
   61      | Expr2 . GT Expr2
   62      | Expr2 . LEQ Expr2
   63      | Expr2 . LT Expr2
   64      | Expr2 . NEQ Expr2
   65      | Expr2 . PLUS Expr2
   66      | Expr2 . MINUS Expr2
   67      | Expr2 . STAR Expr2
   68      | Expr2 . DIV Expr2
   69      | Expr2 . MOD Expr2

    AND    shift, and go to state 104
    LT     shift, and go to state 106
    GT     shift, and go to state 107
    EQ     shift, and go to state 108
    NEQ    shift, and go to state 109
    LEQ    shift, and go to state 110
    GEQ    shift, and go to state 111
    PLUS   shift, and go to state 112
    MINUS  shift, and go to state 113
    STAR   shift, and go to state 114
    DIV    shift, and go to state 115
    MOD    shift, and go to state 116

    $default  reduce using rule 58 (Expr2)


State 135

   57 Expr2: Expr2 . AND Expr2
   58      | Expr2 . OR Expr2
   59      | Expr2 . EQ Expr2
   60      | Expr2 . GEQ Expr2
   61      | Expr2 . GT Expr2
   62      | Expr2 . LEQ Expr2
   63      | Expr2 . LT Expr2
   63      | Expr2 LT Expr2 .
   64      | Expr2 . NEQ Expr2
   65      | Expr2 . PLUS Expr2
   66      | Expr2 . MINUS Expr2
   67      | Expr2 . STAR Expr2
   68      | Expr2 . DIV Expr2
   69      | Expr2 . MOD Expr2

    PLUS   shift, and go to state 112
    MINUS  shift, and go to state 113
    STAR   shift, and go to state 114
    DIV    shift, and go to state 115
    MOD    shift, and go to state 116

    $default  reduce using rule 63 (Expr2)


State 136

   57 Expr2: Expr2 . AND Expr2
   58      | Expr2 . OR Expr2
   59      | Expr2 . EQ Expr2
   60      | Expr2 . GEQ Expr2
   61      | Expr2 . GT Expr2
   61      | Expr2 GT Expr2 .
   62      | Expr2 . LEQ Expr2
   63      | Expr2 . LT Expr2
   64      | Expr2 . NEQ Expr2
   65      | Expr2 . PLUS Expr2
   66      | Expr2 . MINUS Expr2
   67      | Expr2 . STAR Expr2
   68      | Expr2 . DIV Expr2
   69      | Expr2 . MOD Expr2

    PLUS   shift, and go to state 112
    MINUS  shift, and go to state 113
    STAR   shift, and go to state 114
    DIV    shift, and go to state 115
    MOD    shift, and go to state 116

    $default  reduce using rule 61 (Expr2)


State 137

   57 Expr2: Expr2 . AND Expr2
   58      | Expr2 . OR Expr2
   59      | Expr2 . EQ Expr2
   59      | Expr2 EQ Expr2 .
   60      | Expr2 . GEQ Expr2
   61      | Expr2 . GT Expr2
   62      | Expr2 . LEQ Expr2
   63      | Expr2 . LT Expr2
   64      | Expr2 . NEQ Expr2
   65      | Expr2 . PLUS Expr2
   66      | Expr2 . MINUS Expr2
   67      | Expr2 . STAR Expr2
   68      | Expr2 . DIV Expr2
   69      | Expr2 . MOD Expr2

    LT     shift, and go to state 106
    GT     shift, and go to state 107
    LEQ    shift, and go to state 110
    GEQ    shift, and go to state 111
    PLUS   shift, and go to state 112
    MINUS  shift, and go to state 113
    STAR   shift, and go to state 114
    DIV    shift, and go to state 115
    MOD    shift, and go to state 116

    $default  reduce using rule 59 (Expr2)


State 138

   57 Expr2: Expr2 . AND Expr2
   58      | Expr2 . OR Expr2
   59      | Expr2 . EQ Expr2
   60      | Expr2 . GEQ Expr2
   61      | Expr2 . GT Expr2
   62      | Expr2 . LEQ Expr2
   63      | Expr2 . LT Expr2
   64      | Expr2 . NEQ Expr2
   64      | Expr2 NEQ Expr2 .
   65      | Expr2 . PLUS Expr2
   66      | Expr2 . MINUS Expr2
   67      | Expr2 . STAR Expr2
   68      | Expr2 . DIV Expr2
   69      | Expr2 . MOD Expr2

    LT     shift, and go to state 106
    GT     shift, and go to state 107
    LEQ    shift, and go to state 110
    GEQ    shift, and go to state 111
    PLUS   shift, and go to state 112
    MINUS  shift, and go to state 113
    STAR   shift, and go to state 114
    DIV    shift, and go to state 115
    MOD    shift, and go to state 116

    $default  reduce using rule 64 (Expr2)


State 139

   57 Expr2: Expr2 . AND Expr2
   58      | Expr2 . OR Expr2
   59      | Expr2 . EQ Expr2
   60      | Expr2 . GEQ Expr2
   61      | Expr2 . GT Expr2
   62      | Expr2 . LEQ Expr2
   62      | Expr2 LEQ Expr2 .
   63      | Expr2 . LT Expr2
   64      | Expr2 . NEQ Expr2
   65      | Expr2 . PLUS Expr2
   66      | Expr2 . MINUS Expr2
   67      | Expr2 . STAR Expr2
   68      | Expr2 . DIV Expr2
   69      | Expr2 . MOD Expr2

    PLUS   shift, and go to state 112
    MINUS  shift, and go to state 113
    STAR   shift, and go to state 114
    DIV    shift, and go to state 115
    MOD    shift, and go to state 116

    $default  reduce using rule 62 (Expr2)


State 140

   57 Expr2: Expr2 . AND Expr2
   58      | Expr2 . OR Expr2
   59      | Expr2 . EQ Expr2
   60      | Expr2 . GEQ Expr2
   60      | Expr2 GEQ Expr2 .
   61      | Expr2 . GT Expr2
   62      | Expr2 . LEQ Expr2
   63      | Expr2 . LT Expr2
   64      | Expr2 . NEQ Expr2
   65      | Expr2 . PLUS Expr2
   66      | Expr2 . MINUS Expr2
   67      | Expr2 . STAR Expr2
   68      | Expr2 . DIV Expr2
   69      | Expr2 . MOD Expr2

    PLUS   shift, and go to state 112
    MINUS  shift, and go to state 113
    STAR   shift, and go to state 114
    DIV    shift, and go to state 115
    MOD    shift, and go to state 116

    $default  reduce using rule 60 (Expr2)


State 141

   57 Expr2: Expr2 . AND Expr2
   58      | Expr2 . OR Expr2
   59      | Expr2 . EQ Expr2
   60      | Expr2 . GEQ Expr2
   61      | Expr2 . GT Expr2
   62      | Expr2 . LEQ Expr2
   63      | Expr2 . LT Expr2
   64      | Expr2 . NEQ Expr2
   65      | Expr2 . PLUS Expr2
   65      | Expr2 PLUS Expr2 .
   66      | Expr2 . MINUS Expr2
   67      | Expr2 . STAR Expr2
   68      | Expr2 . DIV Expr2
   69      | Expr2 . MOD Expr2

    STAR  shift, and go to state 114
    DIV   shift, and go to state 115
    MOD   shift, and go to state 116

    $default  reduce using rule 65 (Expr2)


State 142

   57 Expr2: Expr2 . AND Expr2
   58      | Expr2 . OR Expr2
   59      | Expr2 . EQ Expr2
   60      | Expr2 . GEQ Expr2
   61      | Expr2 . GT Expr2
   62      | Expr2 . LEQ Expr2
   63      | Expr2 . LT Expr2
   64      | Expr2 . NEQ Expr2
   65      | Expr2 . PLUS Expr2
   66      | Expr2 . MINUS Expr2
   66      | Expr2 MINUS Expr2 .
   67      | Expr2 . STAR Expr2
   68      | Expr2 . DIV Expr2
   69      | Expr2 . MOD Expr2

    STAR  shift, and go to state 114
    DIV   shift, and go to state 115
    MOD   shift, and go to state 116

    $default  reduce using rule 66 (Expr2)


State 143

   57 Expr2: Expr2 . AND Expr2
   58      | Expr2 . OR Expr2
   59      | Expr2 . EQ Expr2
   60      | Expr2 . GEQ Expr2
   61      | Expr2 . GT Expr2
   62      | Expr2 . LEQ Expr2
   63      | Expr2 . LT Expr2
   64      | Expr2 . NEQ Expr2
   65      | Expr2 . PLUS Expr2
   66      | Expr2 . MINUS Expr2
   67      | Expr2 . STAR Expr2
   67      | Expr2 STAR Expr2 .
   68      | Expr2 . DIV Expr2
   69      | Expr2 . MOD Expr2

    $default  reduce using rule 67 (Expr2)


State 144

   57 Expr2: Expr2 . AND Expr2
   58      | Expr2 . OR Expr2
   59      | Expr2 . EQ Expr2
   60      | Expr2 . GEQ Expr2
   61      | Expr2 . GT Expr2
   62      | Expr2 . LEQ Expr2
   63      | Expr2 . LT Expr2
   64      | Expr2 . NEQ Expr2
   65      | Expr2 . PLUS Expr2
   66      | Expr2 . MINUS Expr2
   67      | Expr2 . STAR Expr2
   68      | Expr2 . DIV Expr2
   68      | Expr2 DIV Expr2 .
   69      | Expr2 . MOD Expr2

    $default  reduce using rule 68 (Expr2)


State 145

   57 Expr2: Expr2 . AND Expr2
   58      | Expr2 . OR Expr2
   59      | Expr2 . EQ Expr2
   60      | Expr2 . GEQ Expr2
   61      | Expr2 . GT Expr2
   62      | Expr2 . LEQ Expr2
   63      | Expr2 . LT Expr2
   64      | Expr2 . NEQ Expr2
   65      | Expr2 . PLUS Expr2
   66      | Expr2 . MINUS Expr2
   67      | Expr2 . STAR Expr2
   68      | Expr2 . DIV Expr2
   69      | Expr2 . MOD Expr2
   69      | Expr2 MOD Expr2 .

    $default  reduce using rule 69 (Expr2)


State 146

   32 Statement: WHILE OCURV Expr CCURV . Statement

    error     shift, and go to state 33
    OBRACE    shift, and go to state 34
    SEMI      shift, and go to state 35
    DO        shift, and go to state 37
    IF        shift, and go to state 38
    PARSEINT  shift, and go to state 39
    PRINT     shift, and go to state 40
    RETURN    shift, and go to state 41
    WHILE     shift, and go to state 42
    ID        shift, and go to state 43

    Statement         go to state 157
    Assignment        go to state 47
    MethodInvocation  go to state 48
    ParseArgs         go to state 49


State 147

   48 MethodInvocation: ID OCURV error CCURV .

    $default  reduce using rule 48 (MethodInvocation)


State 148

   47 MethodInvocation: ID OCURV Expr auxMethodInvocation . CCURV
   50 auxMethodInvocation: auxMethodInvocation . COMMA Expr

    CCURV  shift, and go to state 158
    COMMA  shift, and go to state 159


State 149

   23 VarDecl: Type ID auxVarDecl SEMI .

    $default  reduce using rule 23 (VarDecl)


State 150

   25 auxVarDecl: auxVarDecl COMMA . ID

    ID  shift, and go to state 160


State 151

   22 auxFormalParams: auxFormalParams COMMA Type . ID

    ID  shift, and go to state 161


State 152

   33 Statement: DO Statement WHILE OCURV Expr . CCURV SEMI

    CCURV  shift, and go to state 162


State 153

   30 Statement: IF OCURV Expr CCURV Statement .
   31          | IF OCURV Expr CCURV Statement . ELSE Statement

    ELSE  shift, and go to state 163

    $default  reduce using rule 30 (Statement)


State 154

   51 ParseArgs: PARSEINT OCURV ID OSQUARE Expr . CSQUARE CCURV

    CSQUARE  shift, and go to state 164


State 155

   35 Statement: PRINT OCURV STRLIT CCURV SEMI .

    $default  reduce using rule 35 (Statement)


State 156

   34 Statement: PRINT OCURV Expr CCURV SEMI .

    $default  reduce using rule 34 (Statement)


State 157

   32 Statement: WHILE OCURV Expr CCURV Statement .

    $default  reduce using rule 32 (Statement)


State 158

   47 MethodInvocation: ID OCURV Expr auxMethodInvocation CCURV .

    $default  reduce using rule 47 (MethodInvocation)


State 159

   50 auxMethodInvocation: auxMethodInvocation COMMA . Expr

    BOOLLIT   shift, and go to state 64
    PARSEINT  shift, and go to state 39
    OCURV     shift, and go to state 65
    ID        shift, and go to state 66
    PLUS      shift, and go to state 67
    MINUS     shift, and go to state 68
    NOT       shift, and go to state 69
    DECLIT    shift, and go to state 70
    REALLIT   shift, and go to state 71

    Assignment        go to state 72
    MethodInvocation  go to state 73
    ParseArgs         go to state 74
    Expr              go to state 165
    Expr2             go to state 76


State 160

   25 auxVarDecl: auxVarDecl COMMA ID .

    $default  reduce using rule 25 (auxVarDecl)


State 161

   22 auxFormalParams: auxFormalParams COMMA Type ID .

    $default  reduce using rule 22 (auxFormalParams)


State 162

   33 Statement: DO Statement WHILE OCURV Expr CCURV . SEMI

    SEMI  shift, and go to state 166


State 163

   31 Statement: IF OCURV Expr CCURV Statement ELSE . Statement

    error     shift, and go to state 33
    OBRACE    shift, and go to state 34
    SEMI      shift, and go to state 35
    DO        shift, and go to state 37
    IF        shift, and go to state 38
    PARSEINT  shift, and go to state 39
    PRINT     shift, and go to state 40
    RETURN    shift, and go to state 41
    WHILE     shift, and go to state 42
    ID        shift, and go to state 43

    Statement         go to state 167
    Assignment        go to state 47
    MethodInvocation  go to state 48
    ParseArgs         go to state 49


State 164

   51 ParseArgs: PARSEINT OCURV ID OSQUARE Expr CSQUARE . CCURV

    CCURV  shift, and go to state 168


State 165

   50 auxMethodInvocation: auxMethodInvocation COMMA Expr .

    $default  reduce using rule 50 (auxMethodInvocation)


State 166

   33 Statement: DO Statement WHILE OCURV Expr CCURV SEMI .

    $default  reduce using rule 33 (Statement)


State 167

   31 Statement: IF OCURV Expr CCURV Statement ELSE Statement .

    $default  reduce using rule 31 (Statement)


State 168

   51 ParseArgs: PARSEINT OCURV ID OSQUARE Expr CSQUARE CCURV .

    $default  reduce using rule 51 (ParseArgs)
